<ns0:test-suite xmlns:ns0="urn:model.allure.qatools.yandex.ru" start="1540086761513" stop="1540086852869">
  <name>test_login</name>
  <labels/>
  <test-cases>
    <test-case start="1540086761513" status="failed" stop="1540086800536">
      <description>
        :param test_num: 用例编号
        :param phone: 输入手机号
        :param passwd: 输入密码
        :param tag: 标记成功用例 1 成功用例  None 失败用例
        :param tag_message: 获取toast消息方法参数
        :param expect_result:预期结果
        :return:
        </description>
      <name>Test_Login.test_login[test_login_001-13488834010-159357li11-1-None-\u6211\u7684\u4f18\u60e0\u5238]</name>
      <failure>
        <message>AssertionError: assert False</message>
        <stack-trace>self = &lt;test_login.Test_Login object at 0x10de4fb00&gt;, test_num = 'test_login_001', phone = '13488834010'
passwd = '159357li11', tag = 1, tag_message = None, expect_result = '我的优惠券'

    @pytest.mark.parametrize("test_num,phone,passwd,tag,tag_message,expect_result", get_login_data())
    def test_login(self, test_num, phone, passwd, tag, tag_message, expect_result):
        """
            :param test_num: 用例编号
            :param phone: 输入手机号
            :param passwd: 输入密码
            :param tag: 标记成功用例 1 成功用例  None 失败用例
            :param tag_message: 获取toast消息方法参数
            :param expect_result:预期结果
            :return:
            """
        # 点击我
        self.page_obj.get_home_page_obj().click_my_btn()
        # 点击已有账号，去登录
        self.page_obj.get_sign_page_obj().click_exit_account_btn()
        # 登陆操作
        self.page_obj.get_login_page_obj().login(phone, passwd)
        # 判断成功失败用例
        if tag:
            # 预期成功用例
            try:
                # 优惠券
&gt;               coupons = self.page_obj.get_person_page_obj().get_coupons_text()

scripts/test_login.py:52: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;Page.person_page.Person_Page object at 0x10de6f3c8&gt;

    def get_coupons_text(self):
        """返回我的优惠券文本"""
&gt;       return self.search_element(Page.person_coupons_id).text

Page/person_page.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;Page.person_page.Person_Page object at 0x10de6f3c8&gt;, loc = ('id', 'com.yunmall.lc:id/txt_my_coupons')
timeout = 15, poll_frequency = 1.0

    def search_element(self,loc, timeout=15, poll_frequency=1.0):
        """
            定位单个元素
            :param loc: 元祖 定位类型 (By.ID,ID属性值) (By.CLASS_NAME,CLASS属性值) (By.XPATH,XPATH语句)
            :return: 返回定为对象
            """
&gt;       return WebDriverWait(self.driver, timeout, poll_frequency).until(lambda x: x.find_element(*loc))

Base/Base.py:16: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session="9e6be588-eef6-42af-a8df-4e86d3649cd6")&gt;
method = &lt;function Base.search_element.&lt;locals&gt;.&lt;lambda&gt; at 0x10de6b8c8&gt;, message = ''

    def until(self, method, message=''):
        """Calls the method provided with the driver as an argument until the \
            return value is not False."""
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, 'screen', None)
                stacktrace = getattr(exc, 'stacktrace', None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException

During handling of the above exception, another exception occurred:

self = &lt;test_login.Test_Login object at 0x10de4fb00&gt;, test_num = 'test_login_001', phone = '13488834010'
passwd = '159357li11', tag = 1, tag_message = None, expect_result = '我的优惠券'

    @pytest.mark.parametrize("test_num,phone,passwd,tag,tag_message,expect_result", get_login_data())
    def test_login(self, test_num, phone, passwd, tag, tag_message, expect_result):
        """
            :param test_num: 用例编号
            :param phone: 输入手机号
            :param passwd: 输入密码
            :param tag: 标记成功用例 1 成功用例  None 失败用例
            :param tag_message: 获取toast消息方法参数
            :param expect_result:预期结果
            :return:
            """
        # 点击我
        self.page_obj.get_home_page_obj().click_my_btn()
        # 点击已有账号，去登录
        self.page_obj.get_sign_page_obj().click_exit_account_btn()
        # 登陆操作
        self.page_obj.get_login_page_obj().login(phone, passwd)
        # 判断成功失败用例
        if tag:
            # 预期成功用例
            try:
                # 优惠券
                coupons = self.page_obj.get_person_page_obj().get_coupons_text()
                try:
                    # 断言
                    assert coupons == expect_result
                except AssertionError as e:
                    print(e.__str__())
                # 执行退出操作
                # 点击设置
                self.page_obj.get_person_page_obj().click_setting_btn()
                # 退出
                self.page_obj.get_setting_page_obj().click_logout_btn()
    
            except TimeoutException as e:
                # 关闭登录页面
                self.page_obj.get_login_page_obj().close_login_page()
&gt;               assert False
E               assert False

scripts/test_login.py:67: AssertionError</stack-trace>
      </failure>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="1720-MainThread"/>
        <label name="host" value="deMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1540086800540" status="passed" stop="1540086809266">
      <description>
        :param test_num: 用例编号
        :param phone: 输入手机号
        :param passwd: 输入密码
        :param tag: 标记成功用例 1 成功用例  None 失败用例
        :param tag_message: 获取toast消息方法参数
        :param expect_result:预期结果
        :return:
        </description>
      <name>Test_Login.test_login[test_login_005-13488834010-159357li11-None-\u5bc6\u7801\u9519\u8bef-\u767b\u5f55\u5bc6\u7801\u9519\u8bef]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="1720-MainThread"/>
        <label name="host" value="deMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1540086809268" status="passed" stop="1540086827887">
      <description>
        :param test_num: 用例编号
        :param phone: 输入手机号
        :param passwd: 输入密码
        :param tag: 标记成功用例 1 成功用例  None 失败用例
        :param tag_message: 获取toast消息方法参数
        :param expect_result:预期结果
        :return:
        </description>
      <name>Test_Login.test_login[test_login_003-13488834010 -159357li-1-None-\u6211\u7684\u4f18\u60e0\u5238]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="1720-MainThread"/>
        <label name="host" value="deMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1540086827889" status="passed" stop="1540086837156">
      <description>
        :param test_num: 用例编号
        :param phone: 输入手机号
        :param passwd: 输入密码
        :param tag: 标记成功用例 1 成功用例  None 失败用例
        :param tag_message: 获取toast消息方法参数
        :param expect_result:预期结果
        :return:
        </description>
      <name>Test_Login.test_login[test_login_007-13555555555-159357li11-None-\u6b64\u7528\u6237-\u6b64\u7528\u6237\u4e0d\u5b58\u5728]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="1720-MainThread"/>
        <label name="host" value="deMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
    <test-case start="1540086837158" status="passed" stop="1540086852869">
      <description>
        :param test_num: 用例编号
        :param phone: 输入手机号
        :param passwd: 输入密码
        :param tag: 标记成功用例 1 成功用例  None 失败用例
        :param tag_message: 获取toast消息方法参数
        :param expect_result:预期结果
        :return:
        </description>
      <name>Test_Login.test_login[test_login_002- 13488834010-159357li-1-None-\u6211\u7684\u4f18\u60e0\u5238]</name>
      <attachments/>
      <labels>
        <label name="severity" value="normal"/>
        <label name="thread" value="1720-MainThread"/>
        <label name="host" value="deMacBook-Pro.local"/>
        <label name="framework" value="pytest"/>
        <label name="language" value="cpython3"/>
      </labels>
      <steps/>
    </test-case>
  </test-cases>
</ns0:test-suite>
